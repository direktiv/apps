swagger: "2.0"
info:
  description: Description for image-magick
  title: image-magick
  version: 1.0.0
  x-direktiv:
    container: direktiv/image-magick
    category: unknown
    long-description: This is a longer description for the application image-magick
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            required:
              - commands
            properties:
              commands:
                type: array
                items:
                  type: string
                description: |- 
                  List of commands to run with ImageMagick. Image can be provided with `files` in Direktiv. 
                example: 
                  - convert original.png -resize 100x100! 
              return:
                type: boolean
                description: |-
                  If set to `true` it will return the modified image as base64.
              store:
                type: object
                required:
                  - scope
                  - name
                properties:
                  scope:
                    type: string
                    enum: ["instance", "workflow", "namespace"]
                    description: Scope where to save the image.
                  name: 
                    type: string
                    description: Name of the variable.
                example:
                  scope: workflow
                  name: myimage.png
      # direktiv code generation is configured here
      x-direktiv:  
        cmds:
        - action: exec
          exec: echo 'Hello {{ .Name }}'
        output: |
          {
            "greeting": "{{ index (index . 0) "result" }}"
          }
      responses:
        200:
          description: nice greeting
          schema:
            type: object
            additionalProperties: {}
            example: 
              greeting: Hello YourName
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
