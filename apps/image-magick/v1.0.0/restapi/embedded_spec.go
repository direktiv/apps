// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Description for image-magick",
    "title": "image-magick",
    "version": "1.0.0",
    "x-direktiv": {
      "category": "unknown",
      "container": "direktiv/image-magick",
      "long-description": "This is a longer description for the application image-magick"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "commands"
              ],
              "properties": {
                "commands": {
                  "description": "List of commands to run with ImageMagick. Image can be provided with ` + "`" + `files` + "`" + ` in Direktiv. ",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "convert original.png -resize 100x100!"
                  ]
                },
                "return": {
                  "description": "If set to ` + "`" + `true` + "`" + ` it will return the modified image as base64.",
                  "type": "boolean"
                },
                "store": {
                  "type": "object",
                  "required": [
                    "scope",
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the variable.",
                      "type": "string"
                    },
                    "scope": {
                      "description": "Scope where to save the image.",
                      "type": "string",
                      "enum": [
                        "instance",
                        "workflow",
                        "namespace"
                      ]
                    }
                  },
                  "example": {
                    "name": "myimage.png",
                    "scope": "workflow"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "nice greeting",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "example": {
                "greeting": "Hello YourName"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "echo 'Hello {{ .Name }}'"
            }
          ],
          "output": "{\n  \"greeting\": \"{{ index (index . 0) \"result\" }}\"\n}\n"
        }
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Description for image-magick",
    "title": "image-magick",
    "version": "1.0.0",
    "x-direktiv": {
      "category": "unknown",
      "container": "direktiv/image-magick",
      "long-description": "This is a longer description for the application image-magick"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "commands"
              ],
              "properties": {
                "commands": {
                  "description": "List of commands to run with ImageMagick. Image can be provided with ` + "`" + `files` + "`" + ` in Direktiv. ",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "convert original.png -resize 100x100!"
                  ]
                },
                "return": {
                  "description": "If set to ` + "`" + `true` + "`" + ` it will return the modified image as base64.",
                  "type": "boolean"
                },
                "store": {
                  "type": "object",
                  "required": [
                    "scope",
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the variable.",
                      "type": "string"
                    },
                    "scope": {
                      "description": "Scope where to save the image.",
                      "type": "string",
                      "enum": [
                        "instance",
                        "workflow",
                        "namespace"
                      ]
                    }
                  },
                  "example": {
                    "name": "myimage.png",
                    "scope": "workflow"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "nice greeting",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "example": {
                "greeting": "Hello YourName"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "echo 'Hello {{ .Name }}'"
            }
          ],
          "output": "{\n  \"greeting\": \"{{ index (index . 0) \"result\" }}\"\n}\n"
        }
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "PostParamsBodyStore": {
      "type": "object",
      "required": [
        "scope",
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of the variable.",
          "type": "string"
        },
        "scope": {
          "description": "Scope where to save the image.",
          "type": "string",
          "enum": [
            "instance",
            "workflow",
            "namespace"
          ]
        }
      },
      "example": {
        "name": "myimage.png",
        "scope": "workflow"
      }
    },
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
}
