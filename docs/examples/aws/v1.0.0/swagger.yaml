swagger: "2.0"
info:
  description: Description for aws-cli
  title: aws-cli
  version: 1.0.0
  x-direktiv:
    container: direktiv/aws-cli
    category: unknown
    long-description: This is a longer description for the application aws-cli
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            required:
              - access-key
              - secret-key
            properties:
              access-key:
                type: string
              secret-key:
                type: string
              region:
                type: string
      # direktiv code generation is configured here
      x-direktiv:
        debug: true  
        cmds:
        - action: exec
          exec: aws ec2 describe-instances --query "Reservations[].Instances[].InstanceId"
          env:  
            - AWS_ACCESS_KEY_ID={{ .AccessKey }}
            - AWS_SECRET_ACCESS_KEY={{ .SecretKey }}
            - AWS_DEFAULT_REGION={{ default "us-east-1" .Region }}
        output: |-
          { "instances": {{ index (index . 0) "result"  | toJson }} }
      responses:
        200:
          description: nice greeting
          schema:
            type: object
            additionalProperties: {}
            example: 
              greeting: Hello YourName
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
